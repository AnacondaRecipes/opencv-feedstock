{% set version = "4.10.0" %}
{% set build_num = "0" %}

{% if target_platform != "linux-aarch64" and target_platform != "linux-64"%}
{%   set enable_testingui = true %}
{% else %}
{%   set enable_testingui = false %}
{% endif %}

{% if build_variant == "headless" %}
{%   set package_name = "opencv-python-headless" %}
{% else %}
{%   set package_name = "opencv" %}
{% endif %}

package:
  name: opencv-suite
  version: {{ version }}

source:
  - url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz
    fn: opencv-{{ version }}.zip
    sha256: b2171af5be6b26f7a06b1229948bbb2bdaa74fcf5cd097e0af6378fce50a6eb9
    patches:
      # backport https://github.com/opencv/opencv/pull/21611 (unmerged as of 06/2023)
      - patches_opencv/0001-Add-installation-of-pip-metadata-from-cmake.patch
      - patches_opencv/0002-delete-lines-that-download-opencv.patch
      - patches_opencv/0003-find-pkgconfig-on-windows.patch
      - patches_opencv/0004-fix-detection-for-protobuf-23.x.patch
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: 65597f8fb8dc2b876c1b45b928bbcc5f772ddbaf97539bf1b737623d0604cba1
    folder: opencv_contrib-{{ version }}

build:
  number: {{ build_num }}
  # Package not supported on s390x
  skip: true  # [s390x]
  ignore_run_exports_from:
    - python
  missing_dso_whitelist:     # [osx]
    - "*"   # [osx]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - curl
    - unzip     # [not win]
    - 7zip      # [win]
    - libprotobuf 4.25.3
    - ninja
    - pkg-config
    - m2-patch  # [win]
    - patch     # [unix]
    - {{ cdt('mesa-libGL-devel') }}  # [linux]
    - {{ cdt('mesa-libEGL-devel') }}  # [linux and not ppc64le]
  host:
    - eigen 3.3.7
    - ffmpeg 4.2.2             # [not (linux and s390x)]
    - freetype 2.12
    - glib 2                   # [not ppc64le]
    - gst-plugins-base 1.14    # [not (win or ppc64le)]
    - gstreamer 1.14           # [not (win or ppc64le)]
    - gstreamer 1.18.5         # [win]
    - gst-plugins-base 1.18.5  # [win]
    # harfbuzz, glib are both needed for freetype support
    - harfbuzz 4.3.0
    - hdf5 1.12.1
    # Thw OpenCV maintainers says that OpenJPEG have higher priority than JasPer which is deprecated. 
    # In order to use JasPer, OpenJPEG must be disabled.
    - jpeg           # [not win]
    - jasper 4.2.4             # [win or osx-arm64]
    - openjpeg 2.3.0           # [not (win or osx-arm64)]
    - openblas-devel 0.3.21    # [x86_64 and not win]
    - libiconv                 # [unix]
    - libpng 1.6.39
    - libprotobuf 4.25.3
    # to support protobuf >=22 and c++17
    - libabseil 20240116.2
    - libtiff 4.5
    - libwebp-base 1.3.2       # [win or (linux and x86_64)]
    - numpy 
    - python
    - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
    - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
    - qtwebkit =5               # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
    - zlib 1.2.13

outputs:
  - name: {{ package_name }}
    script: install.sh                           # [not win]
    script: install.bat                          # [win]
    build:
      missing_dso_whitelist:  # [osx]
        - "*"                 # [osx]
    run_exports:
      # We are cautiously optimistic here that patch-level updates won't break
      # ABI. However, it sounds like upstream won't guarantee *any* sort of
      # binary compatibility any longer. See also
      #
      #     https://github.com/opencv/opencv/wiki/OE-4.-OpenCV-4
      #
      - {{ pin_subpackage('opencv', max_pin='x.x') }} # [build_variant == 'normal']
      - {{ pin_subpackage('opencv-python-headless', max_pin='x.x') }} # [build_variant == 'headless']

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - libprotobuf 4.25.3
      host:
        - cmake
        - eigen 3.3.7
        - ffmpeg 4.2.2             # [not (linux and s390x)]
        - freetype 2.12
        - glib 2                   # [not ppc64le]
        - gst-plugins-base 1.14    # [not (win or ppc64le)]
        - gstreamer 1.14           # [not (win or ppc64le)]
        - gstreamer 1.18.5         # [win]
        - gst-plugins-base 1.18.5  # [win]
        # harfbuzz, glib are both needed for freetype support
        - harfbuzz 4.3.0
        - hdf5 1.12.1
        # Thw OpenCV maintainers says that OpenJPEG have higher priority than JasPer which is deprecated. 
        # In order to use JasPer, OpenJPEG must be disabled.
        # see https://github.com/opencv/opencv/blob/4.10.0/doc/tutorials/introduction/config_reference/config_reference.markdown#png-jpeg-tiff-webp-support
        - jpeg           # [not win]
        - jasper 4.2.4             # [win or osx-arm64]
        - openjpeg 2.3.0           # [not (win or osx-arm64)]
        - openblas-devel 0.3.21    # [x86_64 and not win]
        - libiconv                 # [unix]
        - libpng 1.6.39
        - libprotobuf 4.25.3
        # to support protobuf >=22 and c++17
        - libabseil 20240116.2
        - libtiff 4.5
        - libwebp-base 1.3.2       # [win or (linux and x86_64)]
        - numpy 
        - python
        - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - qtwebkit =5               # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - zlib 1.2.13
      run:
        - _openmp_mutex         # [linux]
        - eigen >=3.3.7
        - ffmpeg >=4.2.2,<4.3.0a0        # [not (linux and s390x)]
        - freetype
        - glib >=2.69,<3.0a0                 # [not ppc64le]
        - gst-plugins-base   # [not (win or ppc64le)]
        - gstreamer          # [not (win or ppc64le)]
        - gst-plugins-base   # [win]
        - gstreamer          # [win]
        - harfbuzz >=4.3.0,<5.0a0             # [not win]
        - hdf5 >=1.12.1,<1.12.2.0a0
        - jpeg >=9e,<10a                 # [not win]
        - jasper                              # [win or osx-arm64]
        - openjpeg >=2.3.0,<3.0a0             # [not (win or osx-arm64)]
        - libopenblas                         # [x86_64 and not win]
        - libpng
        - libprotobuf
        - libabseil  # bounds through run_exports  
        - libtiff >=4.1.0,<5.0a0  # [not ((osx and arm64) or (linux and aarch64))]
        - libtiff >=4.2.0,<5.0a0  # [(osx and arm64) or (linux and aarch64)]
        - libwebp-base          # [win or (linux and x86_64)]
        - numpy >={{ numpy }},<2
        - python
        - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - qtwebkit =5               # [not (linux and (s390x or ppc64le)) and build_variant == 'normal']
        - zlib >=1.2.13,<1.3.0a0

    test:
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - numpy
        - ninja
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libx11-devel') }}          # [linux and build_variant == 'normal']
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux and build_variant == 'normal']
      files:
        - CMakeLists.txt
        - test.cpp
      commands:
        - if not exist %LIBRARY_PREFIX%\cmake\x64\vc16\lib\OpenCVModules.cmake (exit 1)         # [win]
        - mkdir -p cmake_build_test && pushd cmake_build_test
        - cmake -G "Ninja" ..
        - cmake --build . --config Release
        - popd
        # Verify dynamic libraries.
        # "bioinspired", Not working in 3.1.0
        {% set opencv_libs = [
          "alphamat",
          "aruco",
          "bgsegm",
          "calib3d",
          "ccalib",
          "core",
          "datasets",
          "dnn_objdetect",
          "dnn_superres",
          "dnn",
          "dpm",                               # [linux and x86_64]
          "face",                              # [linux and x86_64]
          "features2d",
          "flann",
          "fuzzy",
          "gapi",
          "hfs",
          "highgui",
          "img_hash",
          "imgcodecs",
          "imgproc",
          "intensity_transform",
          "line_descriptor",
          "mcc",
          "ml",
          "objdetect",                        # [linux and x86_64]
          "optflow",
          "phase_unwrapping",
          "photo",
          "plot",
          "quality",
          "rapid",
          "reg",
          "rgbd",
          "saliency",
          "shape",
          "stereo",
          "stitching",
          "structured_light",
          "superres",
          "surface_matching",
          "text",                             # [linux and x86_64]
          "tracking",
          "video",
          "videoio",
          "videostab",
          "xfeatures2d",
          "ximgproc",
          "xobjdetect",                       # [linux and x86_64]
          "xphoto",
          "freetype",
        ] %}
        {% for each_opencv_lib in opencv_libs %}
        - echo Testing for presence of {{ each_opencv_lib }}  # [unix]
        - test -f ${CONDA_PREFIX}/lib/libopencv_{{ each_opencv_lib }}.dylib                        # [osx]
        - test -f ${CONDA_PREFIX}/lib/libopencv_{{ each_opencv_lib }}.so                           # [linux]
        - if not exist %CONDA_PREFIX%\\Library\\bin\\opencv_{{ each_opencv_lib }}{{ version|replace(".","") }}.dll exit 1 # [win]
        - echo Found                   {{ each_opencv_lib }}  # [unix]
        {% endfor %}

  {% if build_variant == "normal" %}
  # This recipe has merged the outputs for the compiled libraries with the
  # python bindings that used to be vendored as libopencv and py-opencv. This
  # was done to try to improve maintainibility. The following two output
  # sections provide no files other than those already in the opencv package.
  # These "virtual" packages provide backwards compatibility with recipes
  # depending on either of the two old packages.
  - name: libopencv
    script: install-nothing.sh                  # [not win]
    script: install-nothing.bat                 # [win]
    version: {{ version }}
    build:
      number: {{ build_num }}
      missing_dso_whitelist:     # [osx]
        - "*"   # [osx]
    run_exports:
      # We are cautiously optimistic here that patch-level updates won't break
      # ABI. However, it sounds like upstream won't guarantee *any* sort of
      # binary compatibility any longer. See also
      #
      #     https://github.com/opencv/opencv/wiki/OE-4.-OpenCV-4
      #
      - {{ pin_subpackage('libopencv', max_pin='x.x') }}
    requirements:
      host:
        - python
        - {{ pin_subpackage('opencv', exact=True) }}
        - libprotobuf 4.25.3
      run:
        - python
        - {{ pin_subpackage('opencv', exact=True) }}
    test:
      commands:
        - echo "tested in other outputs"

  - name: py-opencv
    script: install-nothing.sh                  # [not win]
    script: install-nothing.bat                 # [win]
    version: {{ version }}
    build:
      number: {{ build_num }}
      missing_dso_whitelist:     # [osx]
        - "*"   # [osx]
    requirements:
      host:
        # 2024/5/31: py-opencv's host environment tries to pick up mkl variant by default, and then fails on osx-64 and linux-64.
        # Using blas=*=openblas solves the issue.
        - blas=*=openblas    # [(linux or osx) and x86_64]
        - python
        - numpy {{ numpy }}
        - libprotobuf 4.25.3
        - {{ pin_subpackage('opencv', exact=True) }}
      run:
        - blas=*=openblas    # [(linux or osx) and x86_64]
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('opencv', exact=True) }}
    test:
      imports:
        - cv2
        - cv2.xfeatures2d
        - cv2.freetype
      files:
        - run_py_test.py
        - color_palette_alpha.png
        - test_1_c1.jpg
      commands:
        - python run_py_test.py
        - if [[ $($PYTHON -c 'import cv2; print(cv2.__version__)') != $PKG_VERSION ]]; then exit 1; fi  # [unix]
        - python -c "import cv2; assert 'Unknown' not in cv2.videoio_registry.getBackendName(cv2.CAP_V4L)"  # [linux]
        - pip check
        - pip list
        - test $(pip list | grep opencv-python | wc -l) -eq 1           # [unix and build_variant == 'normal']
        - test $(pip list | grep opencv-python-headless | wc -l) -eq 1  # [unix and build_variant == 'headless']
      requires:
        - pip
  {% endif %}

about:
  home: https://opencv.org/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Computer vision and machine learning software library.
  description: |
    OpenCV (Open Source Computer Vision Library) includes several hundreds of computer vision algorithms.
    It has a modular structure,which means that the package includes several shared or static libraries.
  doc_url: https://docs.opencv.org/
  dev_url: https://github.com/opencv/opencv/
