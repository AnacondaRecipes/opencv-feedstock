{% set version = "4.5.4" %}
{% set build_num = "1" %}
package:
  name: opencv-suite
  version: {{ version }}

source:
  {% if USE_GIT|default(False) %}
  - git_url: https://github.com/opencv/opencv
    git_tag: {{ version }}
    git_depth: 10
{% else %}
  - url: https://github.com/opencv/opencv/archive/{{ version }}.zip
    fn: opencv-{{ version }}.zip
    sha256: 5deac7f7341faf4b23c38d65f8f89dbf5b4b30d345390a60853640967a2bf61b
{% endif %}
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: ad74b440b4539619dc9b587995a16b691246023d45e34097c73e259f72de9f81
    folder: opencv_contrib-{{ version }}

build:
  number: {{ build_num }}
  # Python 2.7 is not supported on Windows
  # Package not supported on s390x
  skip: True  # [(win and py27) or s390x]
  ignore_run_exports:
    - openblas-devel
    - _openmp_mutex # [linux64 or aarch64]

requirements:

  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - msinttypes            # [win and py<35]
    - ninja
    - pkg-config
    - {{ cdt('mesa-libGL-devel') }}         # [aarch64]
    - {{ cdt('mesa-libEGL-devel') }}        # [aarch64]
  host:
    - cmake
    - eigen
    - ffmpeg                # [not osx]
    - freetype
    - glib                  # [not ppc64le]
    - gst-plugins-base      # [not ppc64le]
    - gstreamer             # [not ppc64le]
    - harfbuzz              # [not win]
    - hdf5
    - jpeg
    - openjpeg              # [not arm64]
    - openblas-devel        # [x86_64]
    - libpng
    - libprotobuf  ==3.5.1  # [linux64]
    - libtiff
    - libwebp               # [not osx]
    - numpy {{ numpy }}
    - python
    - qt ==5.9.7            # [x86_64 and not ppc64le]
    - qt ==5.15.2           # [arm64 or aarch64]
    - zlib
  run:
    - _openmp_mutex         # [linux64 or aarch64]
    - eigen
    - ffmpeg                # [not osx]
    - freetype
    - glib                  # [not ppc64le]
    - gst-plugins-base      # [not ppc64le]
    - gstreamer             # [not ppc64le]
    - harfbuzz              # [not win]
    - hdf5
    - jpeg
    - openjpeg              # [not arm64]
    - libopenblas           # [x86_64]
    - libpng
    - libprotobuf ==3.5.1   # [linux64]
    - libtiff
    - libwebp               # [not osx]
    - numpy {{ numpy }}
    - python
    - qt ==5.9.7            # [x86_64 and not ppc64le]
    - qt ==5.15.2           # [arm64 or aarch64]
    - zlib


outputs:
  - name: opencv
    script: install.sh
    build:
      ignore_run_exports:
        - openblas-devel

    requirements:

      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - msinttypes            # [win and py<35]
        - ninja
        - pkg-config
        - {{ cdt('mesa-libGL-devel') }}         # [aarch64]
        - {{ cdt('mesa-libEGL-devel') }}        # [aarch64]
      host:
        - _openmp_mutex         # [linux64 or aarch64]
        - cmake
        - eigen
        - ffmpeg                # [not osx]
        - freetype
        - glib                  # [not ppc64le]
        - gst-plugins-base      # [not ppc64le]
        - gstreamer             # [not ppc64le]
        - harfbuzz              # [not win]
        - hdf5
        - jpeg
        - openjpeg              # [not arm64]
        - openblas-devel        # [x86_64]
        - libpng
        - libprotobuf  ==3.5.1  # [linux64]
        - libtiff
        - libwebp               # [not osx]
        - numpy {{ numpy }}
        - python
        - qt ==5.9.7            # [x86_64 and not ppc64le]
        - qt ==5.15.2           # [arm64 or aarch64]
        - zlib
      run:
        - _openmp_mutex         # [linux64 or aarch64]
        - eigen
        - ffmpeg                # [not osx]
        - freetype
        - glib                  # [not ppc64le]
        - gst-plugins-base      # [not ppc64le]
        - gstreamer             # [not ppc64le]
        - harfbuzz              # [not win]
        - hdf5
        - jpeg
        - openjpeg              # [not arm64]
        - libopenblas           # [x86_64]
        - libpng
        - libprotobuf ==3.5.1   # [linux64]
        - libtiff
        - libwebp               # [not osx]
        - numpy {{ numpy }}
        - python
        - qt ==5.9.7            # [x86_64 and not ppc64le]
        - qt ==5.15.2           # [arm64 or aarch64]
        - zlib
    test:
      requires:
        - {{ compiler('cxx') }}
        - cmake
        - python
        - numpy
        - ninja
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
      files:
        - test-cmake/CMakeLists.txt
        - test-cmake/DisplayImage.cpp
        - test.cpp
      commands:
        - pushd test-cmake
        - cmake . -GNinja -DOpenCV_SHARED=ON -G"Visual Studio 14 2015"        # [win32]
        - cmake . -GNinja -DOpenCV_SHARED=ON -G"Visual Studio 14 2015 Win64"  # [win64]
        - cmake . -GNinja -DOpenCV_SHARED=ON                                  # [not win]
        - cmake --build . --config Release
        - popd
        # Verify dynamic libraries.
        # "bioinspired", Not working in 3.1.0
        {% set opencv_libs = [
             "aruco",
             "bgsegm",
             "calib3d",
             "ccalib",
             "core",
             "datasets",
             "dpm",                               # [x86_64]
             "face",                              # [X86_64]
             "features2d",
             "flann",
             "fuzzy",
             "highgui",
             "imgcodecs",
             "imgproc",
             "line_descriptor",
             "ml",
             "objdetect",                        # [x86_64]
             "optflow",
             "phase_unwrapping",
             "photo",
             "plot",
             "reg",
             "rgbd",
             "saliency",
             "shape",
             "stereo",
             "stitching",
             "structured_light",
             "superres",
             "surface_matching",
             "text",                             # [x86_64]
             "tracking",
             "video",
             "videoio",
             "videostab",
             "xfeatures2d",
             "ximgproc",
             "xobjdetect",                       # [x86_64]
             "xphoto",
        ] %}
        {% for each_opencv_lib in opencv_libs %}
        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}.dylib                        # [osx]
        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}.so                           # [linux]
        - if not exist %PREFIX%\\Library\\bin\\opencv_{{ each_opencv_lib }}342.dll exit 1  # [win]
        {% endfor %}

  # This recipe has merged the outputs for the compiled libraries with the
  # python bindings that used to be vendored as libopencv and py-opencv. This
  # was done to try to improve maintainibility. The following two output
  # sections provide no files other than those already in the opencv package.
  # These "virtual" packages provide backwards compatibility with recipes
  # depending on either of the two old packages.
  - name: libopencv
    script: install-nothing.sh
    version: {{ version }}
    build:
      number: {{ build_num }}
      skip: True  # [(win and py27) or s390x]
    requirements:
      host:
        - {{ pin_subpackage('opencv', max_pin='x') }}

  - name: py-opencv
    script: install-nothing.sh
    version: {{ version }}
    build:
      number: {{ build_num }}
      skip: True  # [(win and py27) or s390x]
    requirements:
      host:
        - {{ pin_subpackage('opencv', max_pin='x') }}

about:
  home: https://opencv.org/
  license: BSD-3-Clause
  license_family: BSD
  summary: Computer vision and machine learning software library.
  description: |
    OpenCV (Open Source Computer Vision Library) includes several hundreds of computer vision algorithms.
    It has a modular structure,which means that the package includes several shared or static libraries.
  doc_url: https://docs.opencv.org/
  doc_source_url: https://github.com/opencv/opencv/tree/master/doc
  dev_url: https://github.com/opencv/opencv/


